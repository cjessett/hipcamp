{"version":3,"sources":["components/X.js","components/Check.js","components/DropDown.js","components/Feature.js","components/FeaturesList.js","App.js","camp-features.js","serviceWorker.js","index.js"],"names":["X","react_default","a","createElement","role","aria-label","Check","DropDown","addLevel","level","feature","Object","objectSpread","Feature","_ref","title","presence","subfeatures","_useState","useState","_useState2","slicedToArray","open","setOpen","hasSubFeatures","length","cursor","fontSize","concat","style","onClick","e","stopPropagation","toggleOpen","className","FeaturesList","features","map","sortedFeatures","sort","b","props","assign","key","defaultProps","App","id","FEATURES","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fcd509c6.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function X() {\n  return <span role=\"img\" aria-label=\"x\">&#10060;</span>;\n}","import React from 'react';\n\nexport default function Check() {\n  return <span role=\"img\" aria-label=\"check\">&#9989;</span>;\n}","import React from 'react';\n\nexport default function DropDown() {\n  return (\n    <span  role=\"img\" aria-label=\"dropdown\">&#x25BC;</span>\n  );\n}","import React, { useState } from 'react';\nimport X from './X';\nimport Check from './Check';\nimport DropDown from './DropDown';\nimport FeaturesList from './FeaturesList';\n\nfunction addLevel(level) {\n  return function(feature) {\n    return { ...feature, level };\n  }\n}\n\nexport default function Feature({ title, presence, subfeatures, level }) {\n  const [open, setOpen] = useState(false);\n  const toggleOpen = (e) => {\n    e.stopPropagation();\n    setOpen(!open);\n  }\n  const hasSubFeatures = !!subfeatures.length;\n  const cursor = hasSubFeatures ? 'pointer' : 'inherit';\n  const fontSize = `${2 / level}rem`;\n  return (\n    <li style={{ cursor, fontSize }} onClick={e => toggleOpen(e)}>\n      {presence ? <Check /> : <X />}\n      <header className=\"title\">{title}</header>\n      {hasSubFeatures && <DropDown />}\n      {hasSubFeatures && open && <FeaturesList features={subfeatures.map(addLevel(level + 0.5))} />}\n    </li>\n  );\n}\n\nFeature.defaultProps = {\n  title: '',\n  presence: false,\n  subfeatures: [],\n  level: 1,\n}","import React from 'react';\nimport Feature from './Feature';\n\nexport default function FeaturesList({ features }) {\n  const sortedFeatures = features.sort((a, b) => a.presence < b.presence);\n  return (\n    <ul>\n    {sortedFeatures.map((props) => <Feature key={props.title} {...props} />)}\n    </ul>\n  )\n}","import React from 'react';\nimport FeaturesList from './components/FeaturesList';\nimport './App.css';\n\nfunction App({ features }) {\n  return (\n    <div>\n      <header className=\"App-header\">Camp Features</header>\n      <section id=\"features\">\n        <FeaturesList features={features} />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const FEATURES = [\n  {\n    'title': 'Toilet',\n    'presence': true,\n    'subfeatures': []\n  },\n  {\n    'title': 'Pets allowed',\n    'presence': true,\n    'subfeatures': []\n  },\n  {\n    'title': 'Shower',\n    'presence': false,\n    'subfeatures': [\n      {\n        'title': 'Outdoor shower',\n        'presence': false,\n        'subfeatures': []\n      }\n    ]\n  },\n  {\n    'title': 'Trash',\n    'presence': true,\n    'subfeatures': [\n      {\n        'title': 'Recycling bin',\n        'presence': true,\n        'subfeatures': []\n      },\n      {\n        'title': 'Compost bin',\n        'presence': true,\n        'subfeatures': []\n      },\n      {\n        'title': 'Trash bin',\n        'presence': false,\n        'subfeatures': [\n          {\n            'title': 'Pack in, pack out',\n            'presence': true,\n            'subfeatures': []\n          }\n        ]\n      }\n    ]\n  }\n];\n\nexport default FEATURES;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport FEATURES from './camp-features';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App features={FEATURES} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}